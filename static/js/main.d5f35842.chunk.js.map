{"version":3,"sources":["utils/index.ts","components/RPSSelection/RPSSelection.tsx","components/Scoreboard/Scoreboard.tsx","components/Buttons/Buttons.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["whoWins","user","com","prettySelectionNames","rock","paper","scissors","winText","prettyUserSeletion","prettyCompSeletion","whoWon","winOrLoss","endingText","RPSSelection","userSelection","comSelection","className","Scoreboard","userScore","comScore","Buttons","onSelection","disabled","onClick","src","alt","width","height","App","useState","undefined","computer","selections","setSelections","score","setScore","comPick","Math","floor","random","result","console","log","prevScore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5f35842.chunk.js","sourcesContent":["export type Selection = \"rock\" | \"paper\" | \"scissors\";\n\nexport const whoWins = (\n  user: Selection,\n  com: Selection\n): \"Win\" | \"Loss\" | \"Tied\" => {\n  if (user === com) {\n    return \"Tied\";\n  } else if (\n    (user === \"rock\" && com === \"scissors\") ||\n    (user === \"scissors\" && com === \"paper\") ||\n    (user === \"paper\" && com === \"rock\")\n  ) {\n    return \"Win\";\n  } else {\n    return \"Loss\";\n  }\n};\n","import React, { FC } from \"react\";\nimport \"./RPSSelection.css\";\nimport { Selection, whoWins } from \"../../utils/\";\n\ntype Props =\n  | { comSelection: undefined; userSelection: undefined }\n  | {\n      comSelection: Selection;\n      userSelection: Selection;\n    };\n\nconst prettySelectionNames: Record<Selection, string> = {\n  rock: \"Rock\",\n  paper: \"Paper\",\n  scissors: \"Scissors\",\n};\n\nexport const winText = (user: Selection, com: Selection) => {\n  const prettyUserSeletion = prettySelectionNames[user];\n  const prettyCompSeletion = prettySelectionNames[com];\n  const whoWon = whoWins(user, com);\n  const winOrLoss =\n    whoWon === \"Win\" ? \"beats\" : whoWon === \"Loss\" ? \"lost\" : \"tied\";\n  const endingText =\n    whoWon === \"Tied\"\n      ? \"You are tied üòè\"\n      : whoWon === \"Loss\"\n      ? \"You lost ü§Æ\"\n      : \"You win ‚úåÔ∏è\";\n\n  return `${prettyUserSeletion} ${winOrLoss} ${prettyCompSeletion}. ${endingText}`;\n};\n\nexport const RPSSelection: FC<Props> = ({ userSelection, comSelection }) => {\n  return (\n    <div>\n      {!userSelection || !comSelection ? (\n        <></>\n      ) : (\n        <div className=\"statusMsg\">{winText(userSelection, comSelection)}</div>\n      )}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport \"./Scoreboard.css\";\n\ninterface Props {\n  userScore: number;\n  comScore: number;\n}\n\nexport const Scoreboard: FC<Props> = ({ userScore, comScore }) => {\n  return (\n    <div className=\"scoreboardContainer\">\n      <div className=\"labelu scoreBoardLabel\">User</div>\n      <div className=\"labelc scoreBoardLabel\"> Computer</div>\n      <div className=\"scoreboard\"></div>\n      {userScore} : {comScore}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport \"./Buttons.css\";\nimport { Selection } from \"../../utils/\";\n\ninterface Props {\n  disabled?: boolean;\n  onSelection: (userSelection: Selection) => void;\n}\n\nexport const Buttons: FC<Props> = ({ onSelection, disabled }) => {\n  return (\n    <div className=\"rpsImages\">\n      <button\n        disabled={disabled}\n        onClick={() => {\n          onSelection(\"rock\");\n        }}\n      >\n        <img src=\"/rock.png\" alt=\"rock\" width=\"100\" height=\"100\" />\n      </button>\n      <button\n        disabled={disabled}\n        onClick={() => {\n          onSelection(\"paper\");\n        }}\n      >\n        <img src=\"/paper.png\" alt=\"paper\" width=\"100\" height=\"100\" />\n      </button>\n      <button\n        disabled={disabled}\n        onClick={() => {\n          onSelection(\"scissors\");\n        }}\n      >\n        <img src=\"/scissors.png\" alt=\"scissors\" width=\"100\" height=\"100\" />\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { RPSSelection, winText } from \"./components/RPSSelection/RPSSelection\";\nimport { Scoreboard } from \"./components/Scoreboard/Scoreboard\";\nimport { Buttons } from \"./components/Buttons/Buttons\";\nimport { Selection, whoWins } from \"./utils/\";\n\nconst prettySelectionNames: Selection[] = [\"rock\", \"paper\", \"scissors\"];\n\nfunction randomComPick(): Selection {\n  return prettySelectionNames[Math.floor(Math.random() * 3)];\n}\n\nfunction App() {\n  const [selections, setSelections] = useState<\n    | {\n        user: undefined;\n        computer: undefined;\n      }\n    | { user: Selection; computer: Selection }\n  >({\n    user: undefined,\n    computer: undefined,\n  });\n\n  const [score, setScore] = useState({ user: 0, computer: 0 });\n  return (\n    <div className=\"App\">\n      <div className=\"title\">Rock Paper Scissors</div>\n      <div className=\"scoreBoardContainer\">\n        <Scoreboard userScore={score.user} comScore={score.computer} />\n        <Buttons\n          disabled={score.user >= 5 || score.computer >= 5}\n          onSelection={(userSelection) => {\n            const comPick = randomComPick();\n            setSelections({ user: userSelection, computer: comPick });\n            const result = whoWins(userSelection, comPick);\n            console.log(result, userSelection, comPick);\n            if (result !== \"Tied\") {\n              setScore((prevScore) => {\n                if (result === \"Loss\") {\n                  return {\n                    user: prevScore.user,\n                    computer: prevScore.computer + 1,\n                  };\n                }\n                return {\n                  user: prevScore.user + 1,\n                  computer: prevScore.computer,\n                };\n              });\n            }\n          }}\n        />\n        {selections.user ? (\n          <RPSSelection\n            userSelection={selections.user}\n            comSelection={selections.computer}\n          />\n        ) : (\n          <RPSSelection userSelection={undefined} comSelection={undefined} />\n        )}\n        {(score.computer >= 5 || score.user >= 5) && (\n          <button\n            onClick={() => {\n              setScore({ user: 0, computer: 0 });\n            }}\n            className=\"reset\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}